{"version":3,"sources":["views/components/StreamMenu/StreamMenu.module.scss","views/components/ChannelTable/styles.module.scss","views/components/Header.module.scss","views/components/CategoriesList.module.scss","views/components/Player/ClapprPlayer.module.scss","views/screens/Login/Login.module.scss","assets/svg/tv-solid.svg","views/components/ChannelTable/ChannelButton.tsx","views/components/ChannelTable/ChannelChunk.tsx","views/components/ChannelTable/ChannelTable.tsx","views/components/CategoriesList.tsx","views/components/Header.tsx","views/components/Player/Player.tsx","views/components/Player/ClapprPlayer.tsx","views/components/StreamMenu/StreamMenu.tsx","views/screens/LiveMenu.tsx","functions/storage.ts","functions/case.ts","api/ApiService.ts","views/screens/VodMenu.tsx","views/screens/Login/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ChannelButton","props","context","state","iconError","prev","stream","this","setState","next","streamId","active","className","icon","onClick","styles","logo","src","alt","name","onError","title","classNames","channel","movie","streamType","tvSolid","streamIcon","Component","ChannelChunk","shouldComponentUpdate","bind","activeStreamId","streams","difference","length","findIndex","setStream","map","style","cellStyle","width","rowSize","toFixed","minWidth","maxWidth","ChannelTable","chunks","chunk","channelTableContainer","channelTable","cellPadding","cellSpacing","streamChunk","index","CategoriesList","categories","activeCategoryId","setCategory","getClasses","categoryId","category","c","categoryName","Header","actions","onAction","header","action","to","path","text","key","ClapprPlayer","player","source","wrapper","video","querySelector","pause","destroy","Clappr","Player","attachTo","play","dtp","height","clapprPlayer","ReactDOM","findDOMNode","StreamMenu","filteredStreams","activeCategory","activeStream","activeStreamUrl","headerActions","disableEpg","container","a","console","log","livePlayer","navigation","categoryContainer","channelContainer","playerContainer","epgDisabled","epg","apiService","makeStreamUrl","LiveMenu","database","live","ProxyConfig","storage","suffix","loaded","target","property","includes","getItem","push","value","setItem","item","JSON","parse","stringify","defaults","Proxy","parseKey","revert","replace","v","toUpperCase","toLowerCase","parseObject","object","Array","isArray","obj","constructor","parsedObj","RequestMaker","credentials","url","axios","get","params","username","password","status","data","Error","StreamCollection","filter","collection","ApiService","requestMaker","info","localStorage","updatedAt","liveCategories","liveStreams","vodCategories","vodStreams","loadServerInfo","Object","assign","authenticated","Date","now","sync","fromArray","vod","Promise","all","syncLiveCategories","syncLiveStreams","syncVodCategories","syncVodStreams","make","VodMenu","Login","onAuthenticated","useState","setUrl","setUsername","setPassword","e","preventDefault","setCredentials","alert","message","login","form","onSubmit","field","input","onChange","user","pass","authBtn","App","dbService","ready","loadDatabase","componentDidMount","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.421f928e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StreamMenu_container__P5OV4\",\"live-player\":\"StreamMenu_live-player__203yB\",\"livePlayer\":\"StreamMenu_live-player__203yB\",\"navigation\":\"StreamMenu_navigation__1sPKD\",\"category-container\":\"StreamMenu_category-container__3US_q\",\"categoryContainer\":\"StreamMenu_category-container__3US_q\",\"channel-container\":\"StreamMenu_channel-container__3MMBX\",\"channelContainer\":\"StreamMenu_channel-container__3MMBX\",\"player-container\":\"StreamMenu_player-container__279YM\",\"playerContainer\":\"StreamMenu_player-container__279YM\",\"player\":\"StreamMenu_player__3Qep4\",\"epg-disabled\":\"StreamMenu_epg-disabled__XPXqp\",\"epgDisabled\":\"StreamMenu_epg-disabled__XPXqp\",\"epg\":\"StreamMenu_epg__2ebTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"channel-table-container\":\"styles_channel-table-container__jDpIv\",\"channelTableContainer\":\"styles_channel-table-container__jDpIv\",\"channelTable\":\"styles_channelTable__2-Q73\",\"channel\":\"styles_channel__N0nGz\",\"active\":\"styles_active__Yaf-H\",\"title\":\"styles_title__N2fDY\",\"logo\":\"styles_logo__B6EDP\",\"movie\":\"styles_movie__2N9jw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2OxAW\",\"title\":\"Header_title__Wr8bA\",\"actions\":\"Header_actions__jrLcL\",\"action\":\"Header_action__CYpHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categories\":\"CategoriesList_categories__8WDjD\",\"category\":\"CategoriesList_category__2GYS1\",\"active\":\"CategoriesList_active__1wJ_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clappr-player\":\"ClapprPlayer_clappr-player__tWuoS\",\"clapprPlayer\":\"ClapprPlayer_clappr-player__tWuoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2l8AC\",\"form\":\"Login_form__1SLbs\",\"field\":\"Login_field__42JpT\",\"title\":\"Login_title__2UEVA\",\"input\":\"Login_input__2lNlX\",\"url\":\"Login_url__3yMC_\",\"user\":\"Login_user__3960x\",\"pass\":\"Login_pass__I4n24\",\"auth-btn\":\"Login_auth-btn__1_7w7\",\"authBtn\":\"Login_auth-btn__1_7w7\"};","export default __webpack_public_path__ + \"static/media/tv-solid.4be3af6c.svg\";","import React, {Component} from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./styles.module.scss\";\nimport tvSolid from \"../../../assets/svg/tv-solid.svg\";\nimport {Stream} from \"../../../api/ApiService\";\n\nexport interface ChannelButtonProps {\n    stream: Stream\n    onClick: () => void\n    active: boolean\n}\n\nexport interface ChannelButtonState {\n    iconError: boolean\n}\n\nexport default class ChannelButton extends Component<ChannelButtonProps, ChannelButtonState> {\n    constructor(props: Readonly<ChannelButtonProps>, context: any) {\n        super(props, context);\n\n        this.state = {\n            iconError: false\n        }\n    }\n\n    private get className() {\n        return classNames(styles.channel, {\n            [styles.active]: this.props.active,\n            [styles.movie]: this.props.stream.streamType === \"movie\"\n        })\n    }\n\n    private get icon() {\n        if (this.state.iconError) {\n            return tvSolid\n        }\n        if (!this.props.stream.streamIcon) {\n            return tvSolid\n        }\n        return this.props.stream.streamIcon\n    }\n\n    componentDidUpdate(prev: Readonly<ChannelButtonProps>) {\n        if (prev.stream !== this.props.stream) {\n            this.setState({iconError: false})\n        }\n    }\n\n    shouldComponentUpdate(next: Readonly<ChannelButtonProps>): boolean {\n        return next.stream.streamId !== this.props.stream.streamId || next.active !== this.props.active\n    }\n\n    render() {\n        const {className, props, icon} = this\n        const {stream, onClick} = props\n\n        return (\n            <button key={stream.streamId}\n                    className={className}\n                    onClick={onClick}>\n                <div className={styles.logo}>\n                    <img src={icon}\n                         alt={stream.name}\n                         onError={() => this.setState({iconError: true})}/>\n                </div>\n                <label className={styles.title}>{stream.name}</label>\n            </button>\n        )\n    }\n}\n","import React, {Component, CSSProperties} from \"react\";\nimport {difference, findIndex} from \"lodash\";\nimport {ChannelTableProps} from \"./ChannelTable\";\nimport ChannelButton from \"./ChannelButton\";\nimport {Stream} from \"../../../api/ApiService\";\n\nexport interface ChannelChunkProps {\n    streams: Stream[]\n    rowSize: number\n    setStream: (s: Stream) => void\n    activeStreamId: number | null\n}\n\nexport default class ChannelChunk extends Component<ChannelChunkProps> {\n    constructor(props: ChannelTableProps, context: any) {\n        super(props, context);\n\n        this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this)\n    }\n\n    private get cellStyle(): Partial<CSSProperties> {\n        const width = (100 / this.props.rowSize).toFixed(0) + \"%\"\n        return {\n            width,\n            minWidth: width,\n            maxWidth: width\n        }\n    }\n\n    shouldComponentUpdate({activeStreamId, streams}: Readonly<ChannelTableProps>) {\n        if (activeStreamId === this.props.activeStreamId) {\n            return difference(this.props.streams, streams).length > 0\n        }\n        if (findIndex(streams, ['streamId', activeStreamId]) !== -1) {\n            return true\n        }\n        return findIndex(this.props.streams, ['streamId', this.props.activeStreamId]) !== -1\n    }\n\n    render() {\n        const {streams, setStream, activeStreamId} = this.props\n        return (\n            <tr>\n                {streams.map((stream: Stream) => (\n                    <td style={this.cellStyle}>\n                        <ChannelButton stream={stream}\n                                       onClick={() => setStream(stream)}\n                                       active={activeStreamId === stream.streamId}/>\n                    </td>\n                ))}\n            </tr>\n        )\n    }\n}\n","import React from 'react'\nimport styles from \"./styles.module.scss\";\nimport {chunk} from \"lodash\";\nimport ChannelChunk from \"./ChannelChunk\";\nimport {Stream} from \"../../../api/ApiService\";\n\nexport interface ChannelTableProps {\n    streams: Stream[]\n    rowSize: number\n    setStream: (s: Stream) => void\n    activeStreamId: number | null\n}\n\nexport default function ChannelTable({streams, activeStreamId, rowSize, setStream}: ChannelTableProps) {\n    const chunks = chunk(streams, rowSize)\n    return (\n        <div className={styles.channelTableContainer}>\n            <table className={styles.channelTable} cellPadding={0} cellSpacing={0}>\n                <tbody>\n                {chunks.map((streamChunk: Stream[], index) => (\n                    <ChannelChunk key={index}\n                                  streams={streamChunk}\n                                  activeStreamId={activeStreamId}\n                                  setStream={setStream}\n                                  rowSize={rowSize}/>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React, {Component} from 'react'\nimport styles from \"./CategoriesList.module.scss\";\nimport classNames from \"classnames\";\nimport {Category} from \"../../api/ApiService\";\n\ninterface CategoriesListProps {\n    categories: Category[]\n    setCategory: (c: Category | null) => void\n    activeCategoryId: string | null\n}\n\nexport default class CategoriesList extends Component<CategoriesListProps> {\n    shouldComponentUpdate(next: CategoriesListProps): boolean {\n        return next.categories !== this.props.categories || next.activeCategoryId !== this.props.activeCategoryId\n    }\n\n    render() {\n        const {categories, activeCategoryId, setCategory} = this.props\n\n        function getClasses(categoryId: string | null) {\n            return classNames(styles.category, {\n                [styles.active]: activeCategoryId === categoryId\n            })\n        }\n\n        return (\n            <div className={styles.categories}>\n                <ul>\n                    <button className={getClasses(null)}\n                            onClick={() => setCategory(null)}>\n                        Todos\n                    </button>\n                    {categories.map((c: Category) => (\n                        <button key={c.categoryId}\n                                className={getClasses(c.categoryId)}\n                                onClick={() => setCategory(c)}>\n                            {c.categoryName}\n                        </button>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport styles from './Header.module.scss'\n\nexport interface Action {\n    key: string\n    text: string\n    path: string\n}\n\nexport interface HeaderProps {\n    title: string\n    actions: Action[]\n    onAction: (a: string) => void\n}\n\nexport default function Header({title, actions, onAction}: HeaderProps) {\n    function renderActions() {\n        return (\n            <div className={styles.actions}>\n                {actions.map((action) => (\n                    <Link key={action.key} className={styles.action} to={action.path}>\n                        {action.text}\n                    </Link>\n                ))}\n            </div>\n        )\n    }\n\n    return (\n        <header className={styles.header}>\n            <h1 className={styles.title}>{title}</h1>\n            {renderActions()}\n        </header>\n    )\n}\n","import ClapprPlayer from \"./ClapprPlayer\";\n\nexport default ClapprPlayer\n","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport Clappr from 'clappr'\nimport {PlayerProps} from \"./types\";\nimport styles from './ClapprPlayer.module.scss'\n\nexport default class ClapprPlayer extends Component<PlayerProps> {\n    private player: typeof Clappr.Player | null\n\n    private get wrapper(): HTMLDivElement {\n        return ReactDOM.findDOMNode(this) as HTMLDivElement\n    }\n\n    shouldComponentUpdate(next: Readonly<PlayerProps>) {\n        return next.source !== this.props.source\n    }\n\n    componentDidUpdate() {\n        const {wrapper, props} = this\n        const {source} = props\n        let {player} = this\n        let video = wrapper.querySelector(\"video\") as HTMLVideoElement | null\n\n        if (player) {\n            video?.pause()\n            player?.destroy()\n\n            player = null\n            video = null\n        }\n\n        if (source) {\n            player = new Clappr.Player({source})\n            player.attachTo(wrapper)\n            player.play()\n\n            video = wrapper.querySelector(\"video\")\n            video?.play()\n\n            const dtp = wrapper.querySelector(\"[data-player]\") as HTMLDivElement\n            dtp.style.height = \"100%\"\n            dtp.style.width = \"100%\"\n        }\n\n        this.player = player\n    }\n\n    render() {\n        return (\n            <div className={styles.clapprPlayer}></div>\n        )\n    }\n}\n","import styles from './StreamMenu.module.scss'\nimport {Component} from \"react\";\n\nimport ChannelTable from \"../../components/ChannelTable/ChannelTable\";\nimport CategoriesList from \"../../components/CategoriesList\";\nimport Header, {Action} from \"../../components/Header\";\nimport Player from \"../../components/Player/Player\";\nimport ApiService, {Category, Stream, StreamCollection} from \"../../../api/ApiService\";\nimport classNames from \"classnames\";\n\nexport interface StreamMenuProps {\n    apiService: ApiService\n    categories: Category[]\n    streams: StreamCollection\n    headerActions: Action[]\n    disableEpg?: boolean\n    epg?: any\n}\n\nexport interface StreamMenuState {\n    filteredStreams: Stream[],\n    activeCategory: Category | null\n    activeStream: Stream | null\n}\n\nexport default class StreamMenu extends Component<StreamMenuProps, StreamMenuState> {\n    constructor(props: StreamMenuProps, context: any) {\n        super(props, context);\n\n        this.state = {\n            filteredStreams: props.streams,\n            activeCategory: null,\n            activeStream: null\n        }\n\n        this.setCategory = this.setCategory.bind(this)\n        this.setStream = this.setStream.bind(this)\n    }\n\n    private setCategory(category: Category | null) {\n        let streams: Stream[] = this.props.streams\n        if (category) {\n            streams = (streams as StreamCollection).category(category)\n        }\n        this.setState({\n            activeCategory: category,\n            filteredStreams: streams\n        })\n    }\n\n    private setStream(stream: Stream) {\n        this.setState({activeStream: stream})\n    }\n\n    private get activeCategoryId() {\n        return this.state.activeCategory?.categoryId || null\n    }\n\n    private get activeStreamId() {\n        return this.state.activeStream?.streamId || null\n    }\n\n    private get activeStreamUrl() {\n        const {activeStream} = this.state\n        const {apiService} = this.props\n        if (!activeStream) {\n            return \"\"\n        }\n        return apiService.makeStreamUrl(activeStream)\n    }\n\n    render() {\n        const {props, state, setCategory, setStream, activeCategoryId, activeStreamId, activeStreamUrl} = this\n        const {categories, headerActions, disableEpg} = props\n        const {filteredStreams} = state\n\n        return (\n            <div className={styles.container}>\n                <Header title=\"TV Ao Vivo\" actions={headerActions} onAction={(a) => console.log(a)}/>\n                <div className={styles.livePlayer}>\n                    <nav className={styles.navigation}>\n                        <div className={styles.categoryContainer}>\n                            <CategoriesList categories={categories}\n                                            setCategory={setCategory}\n                                            activeCategoryId={activeCategoryId}/>\n                        </div>\n                        <div className={styles.channelContainer}>\n                            <ChannelTable streams={filteredStreams}\n                                          rowSize={3}\n                                          setStream={setStream}\n                                          activeStreamId={activeStreamId}/>\n                        </div>\n                    </nav>\n                    <div className={classNames(styles.playerContainer, {[styles.epgDisabled]: disableEpg})}>\n                        <div className={styles.player}>\n                            <Player source={activeStreamUrl} onError={() => null}/>\n                        </div>\n                        {disableEpg ? null : (\n                            <div className={styles.epg}>\n                                <p>Guia de programação indisponível</p>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ApiService, {Database} from \"../../api/ApiService\";\nimport StreamMenu from \"../components/StreamMenu/StreamMenu\";\n\nexport interface LiveMenuProps {\n    apiService: ApiService\n    database: Database\n}\n\nexport default function LiveMenu({apiService, database}: LiveMenuProps) {\n    return <StreamMenu apiService={apiService}\n                       categories={database.live.categories}\n                       streams={database.live.streams}\n                       headerActions={[\n                           {\n                               key: \"vod\",\n                               text: \"filmes\",\n                               path: \"/movies\"\n                           },\n                           {\n                               key: \"series\",\n                               text: \"Séries\",\n                               path: \"/movies\"\n                           }\n                       ]}/>\n}\n","interface GenericObject {\n    [key: string]: any | null\n}\n\nclass ProxyConfig<T extends GenericObject> implements ProxyHandler<T> {\n    private readonly loaded: Array<keyof T>\n    private readonly suffix: string\n    private readonly storage: Storage\n\n    constructor(storage: Storage, suffix: string = \"\") {\n        this.loaded = []\n        this.suffix = suffix\n        this.storage = storage\n    }\n\n    get<K extends keyof T>(target: T, property: K): T[K] | null {\n        if (!this.loaded.includes(property)) {\n            target[property] = this.getItem(property) as T[K]\n            this.loaded.push(property)\n        }\n        return target[property]\n    }\n\n    set<K extends keyof T>(target: T, property: K, value: T[K]): boolean {\n        target[property] = value\n        return this.setItem(property, value)\n    }\n\n    private key(property: keyof T) {\n        return `${this.suffix}:${property}`\n    }\n\n    private getItem<K extends keyof T>(property: K): T[K] | null {\n        const key = this.key(property)\n        const item = this.storage.getItem(key) || \"null\"\n        return JSON.parse(item)\n    }\n\n    private setItem<K extends keyof T>(property: K, value: T[K]) {\n        const key = this.key(property)\n        this.storage.setItem(key, JSON.stringify(value))\n        return true\n    }\n}\n\nexport default function storage<T extends GenericObject>(storage: Storage, suffix: string, defaults: T): T {\n    return new Proxy(defaults, new ProxyConfig(storage, suffix)) as T\n}\n","function parseKey(key: string, revert: boolean = false): string {\n    return revert\n        ? key.replace(/(_\\w)/g, v => v[1].toUpperCase())\n        : key.replace(/([^A-Z][A-Z0-9])/g, v => `${v[0]}_${v[1].toLowerCase()}`)\n}\n\n\nfunction parseObject(object: any, revert: boolean = false): any {\n    if (!object || 'object' !== typeof object) {\n        return object\n    }\n\n    if (Array.isArray(object)) {\n        return object.map(obj => parseObject(obj, revert))\n    }\n\n    if (object.constructor !== {}.constructor) {\n        return object\n    }\n\n    const parsedObj = {} as { [key: string]: any }\n\n    for (const key in object) {\n        parsedObj[parseKey(key, revert)] = parseObject(object[key], revert)\n    }\n\n    return parsedObj\n}\n\nexport function toSnakeCase(obj: any): any {\n    return parseObject(obj)\n}\n\nexport function toCamelCase(obj: any): any {\n    return parseObject(obj, true)\n}\n","import storage from \"../functions/storage\";\nimport axios from \"axios\";\nimport {toCamelCase} from \"../functions/case\";\nimport {get} from 'lodash'\n\nexport type Actions = \"get_live_streams\" | \"get_live_categories\" | \"get_vod_categories\" | \"get_vod_streams\"\n\nexport type OutputFormat = \"m3u8\" | \"ts\"\n\nexport interface Credentials {\n    url: string\n    username: string\n    password: string\n}\n\nexport interface Category {\n    categoryId: string\n    categoryName: string\n    parentId: string\n}\n\ntype StreamType = \"live\" | \"movie\"\n\nexport interface Stream {\n    num: number\n    name: string\n    streamType: StreamType\n    streamId: number\n    streamIcon: string\n    epgChannelId: string\n    added: string\n    categoryId: string\n    customSid: string\n    tvArchive: number\n    directSource: string\n    tvArchiveDuration: number\n}\n\nexport interface Database {\n    live: {\n        categories: Category[]\n        streams: StreamCollection\n        epg: any\n    },\n    vod: {\n        categories: Category[]\n        streams: StreamCollection\n    }\n}\n\nexport interface ServerInfo {\n    userInfo: {\n        username: string\n        password: string\n        message: string\n        auth: number,\n        status: string\n        expDate: string\n        isTrial: number\n        active_cons: number\n        createdAt: string\n        maxConnections: number\n        allowedOutputFormats: OutputFormat[]\n    },\n    serverInfo: {\n        url: string\n        port: string\n        httpsPort: string\n        serverProtocol: string\n        rtmpPort: string\n        timezone: string\n        timestampNow: number,\n        timeNow: string\n    }\n}\n\n\ninterface StorageScheme {\n    updatedAt: number\n    liveCategories: Category[]\n    liveStreams: Stream[]\n    vodCategories: Category[]\n    vodStreams: Stream[]\n    epg: any\n}\n\nclass RequestMaker {\n    private credentials: Credentials\n\n    constructor(credentials: Credentials) {\n        this.credentials = credentials;\n    }\n\n    private get url() {\n        return this.credentials.url\n    }\n\n    private get username() {\n        return this.credentials.username\n    }\n\n    private get password() {\n        return this.credentials.password\n    }\n\n    private path(path: string): string {\n        return `${this.url}/${path}`\n    }\n\n    public async make(path: string, action?: Actions) {\n        const {status, data} = await axios.get(this.path(path), {\n            params: {\n                username: this.username,\n                password: this.password,\n                action\n            }\n        })\n        if (status !== 200) {\n            throw new Error(\"Erro\")\n        }\n        return toCamelCase(data)\n    }\n}\n\nexport class StreamCollection extends Array {\n    category(category: Category) {\n        return this.filter((stream: Stream) => stream.categoryId === category.categoryId)\n    }\n\n    static fromArray(stream: Stream[]): StreamCollection {\n        const collection = new StreamCollection()\n        collection.push(...stream)\n        return collection\n    }\n}\n\nexport default class ApiService {\n    private readonly credentials: Credentials\n    private readonly requestMaker: RequestMaker\n    private readonly storage: StorageScheme\n    private info: ServerInfo | null = null\n\n    constructor() {\n        this.credentials = storage(localStorage, \"crd\", {\n            url: \"\",\n            username: \"\",\n            password: \"\"\n        });\n        this.requestMaker = new RequestMaker(this.credentials)\n        this.storage = storage(localStorage, \"sch\", {\n            updatedAt: 0,\n            liveCategories: [],\n            liveStreams: [],\n            vodCategories: [],\n            vodStreams: [],\n            epg: null\n        })\n    }\n\n    public async authenticated(): Promise<boolean> {\n        if (!this.info) {\n            await this.loadServerInfo()\n        }\n        return get(this.info, \"userInfo.auth\") === 1\n    }\n\n    public async setCredentials(credentials: Credentials): Promise<boolean> {\n        this.info = null\n        Object.assign(this.credentials, credentials)\n        return await this.authenticated()\n    }\n\n    public async database(): Promise<Database> {\n        if (Date.now() - this.storage.updatedAt > 10000000) {\n            await this.sync()\n        }\n        return {\n            live: {\n                categories: this.storage.liveCategories,\n                streams: StreamCollection.fromArray(this.storage.liveStreams),\n                epg: this.storage.epg\n            },\n            vod: {\n                categories: this.storage.vodCategories,\n                streams: StreamCollection.fromArray(this.storage.vodStreams)\n            }\n        }\n    }\n\n    public async sync() {\n        try {\n            await Promise.all([\n                this.syncLiveCategories(),\n                this.syncLiveStreams(),\n                this.syncVodCategories(),\n                this.syncVodStreams()\n            ])\n            this.storage.updatedAt = Date.now()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    public makeStreamUrl(stream: Stream) {\n        const {url, username, password} = this.credentials\n        switch (stream.streamType) {\n            case \"live\":\n                return `${url}/live/${username}/${password}/${stream.streamId}.m3u8`\n            case \"movie\":\n                return `${url}/movie/${username}/${password}/${stream.streamId}.mp4`\n            default:\n                throw new Error(\"Invalid stream type\")\n        }\n    }\n\n    private async loadServerInfo() {\n        if (!this.credentials.url) {\n            return\n        }\n        this.info = await this.make(\"player_api.php\")\n    }\n\n    private async syncVodStreams() {\n        this.storage.vodStreams = await this.make(\"player_api.php\", \"get_vod_streams\")\n    }\n\n    private async syncVodCategories() {\n        this.storage.vodCategories = await this.make(\"player_api.php\", \"get_vod_categories\")\n    }\n\n    private async syncLiveStreams() {\n        this.storage.liveStreams = await this.make(\"player_api.php\", \"get_live_streams\")\n    }\n\n    private async syncLiveCategories() {\n        this.storage.liveCategories = await this.make(\"player_api.php\", \"get_live_categories\")\n    }\n\n    private make(path: string, action?: Actions) {\n        return this.requestMaker.make(path, action)\n    }\n}\n","import React from 'react'\nimport ApiService, {Database} from \"../../api/ApiService\";\nimport StreamMenu from \"../components/StreamMenu/StreamMenu\";\n\nexport interface LiveMenuProps {\n    apiService: ApiService\n    database: Database\n}\n\nexport default function VodMenu({apiService, database}: LiveMenuProps) {\n    return <StreamMenu disableEpg\n                       apiService={apiService}\n                       categories={database.vod.categories}\n                       streams={database.vod.streams}\n                       headerActions={[\n                           {\n                               key: \"live\",\n                               text: \"LiveTV\",\n                               path: \"/livetv\"\n                           },\n                           {\n                               key: \"series\",\n                               text: \"Séries\",\n                               path: \"/livetv\"\n                           }\n                       ]}/>\n}\n","import React, {FormEvent, useState} from \"react\";\nimport styles from './Login.module.scss'\nimport classNames from \"classnames\";\nimport ApiService from \"../../../api/ApiService\";\n\ninterface LoginProps {\n    apiService: ApiService\n    onAuthenticated: () => void\n}\n\nexport default function Login({apiService, onAuthenticated}: LoginProps) {\n    const [url, setUrl] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    async function submit(e: FormEvent) {\n        e.preventDefault()\n        try {\n            const authenticated = await apiService.setCredentials({\n                url, username, password\n            })\n            if (!authenticated) {\n                alert(\"Os dados de autenticação são inválidos.\")\n                return false\n            }\n            onAuthenticated()\n        } catch (e) {\n            alert(e.message)\n        }\n        return false\n    }\n\n    return (\n        <div className={styles.login}>\n            <form className={styles.form} onSubmit={submit}>\n                <div className={classNames(styles.field, styles.url)}>\n                    <label className={styles.title}>Url</label>\n                    <input className={styles.input} value={url} onChange={(e) => setUrl(e.target.value)}/>\n                </div>\n                <div className={classNames(styles.field, styles.user)}>\n                    <label className={styles.title}>Username</label>\n                    <input className={styles.input} value={username} onChange={(e) => setUsername(e.target.value)}/>\n                </div>\n                <div className={classNames(styles.field, styles.pass)}>\n                    <label className={styles.title}>Password</label>\n                    <input className={styles.input} value={password} onChange={(e) => setPassword(e.target.value)}/>\n                </div>\n                <button className={styles.authBtn}>Entrar</button>\n            </form>\n        </div>\n    )\n}\n","import React, {PureComponent} from 'react';\nimport LiveMenu from \"./views/screens/LiveMenu\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport ApiService, {Database} from \"./api/ApiService\";\nimport VodMenu from \"./views/screens/VodMenu\";\nimport Login from \"./views/screens/Login/Login\";\n\ninterface AppState {\n    ready: boolean\n    authenticated: boolean,\n    database: Database | null\n}\n\nclass App extends PureComponent<any, AppState> {\n    private dbService: ApiService;\n\n    constructor(props: any, context: any) {\n        super(props, context);\n\n        this.dbService = new ApiService()\n        this.state = {\n            ready: false,\n            authenticated: false,\n            database: null\n        }\n    }\n\n    private async loadDatabase() {\n        this.setState({\n            database: await this.dbService.database()\n        })\n    }\n\n    async componentDidMount() {\n        this.setState({\n            ready: true,\n            authenticated: await this.dbService.authenticated()\n        })\n    }\n\n    render() {\n        const {ready, authenticated, database} = this.state\n        if (!ready) {\n            return null\n        }\n        if (!authenticated) {\n            return (\n                <Router>\n                    <Redirect to=\"/login\"/>\n                    <Route path=\"/login\">\n                        <Login apiService={this.dbService} onAuthenticated={() => this.componentDidMount()}/>\n                    </Route>\n                </Router>\n            )\n        }\n        if (!database) {\n            this.loadDatabase()\n            return <div>Loading database...</div>\n        }\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/livetv\">\n                        <LiveMenu apiService={this.dbService} database={database}/>\n                    </Route>\n                    <Route path=\"/movies\">\n                        <VodMenu apiService={this.dbService} database={database}/>\n                    </Route>\n                    <Redirect to=\"/livetv\"/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./assets/scss/main.scss\"\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}